/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { SoulBoundNFTFactory, SoulBoundNFTFactoryInterface } from '../SoulBoundNFTFactory';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_proxyRegistry',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'beaconProxy',
        type: 'address',
      },
    ],
    name: 'BeaconProxyCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'createdBy',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'initialImplementation',
        type: 'address',
      },
    ],
    name: 'UpgradeableBeaconCreated',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'organization',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'defaultRole',
        type: 'string',
      },
      {
        internalType: 'bool',
        name: 'transferable',
        type: 'bool',
      },
      {
        internalType: 'bool',
        name: 'mintable',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: 'mintPrice',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'tokenOwner',
        type: 'address',
      },
    ],
    name: 'newBeaconProxy',
    outputs: [
      {
        internalType: 'contract BeaconProxy',
        name: 'beaconProxy',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'initialImplementation',
        type: 'address',
      },
    ],
    name: 'newUpgradeableBeacon',
    outputs: [
      {
        internalType: 'contract UpgradeableBeacon',
        name: 'beacon',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxyRegistry',
    outputs: [
      {
        internalType: 'contract SoulBoundNFTProxyRegistry',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161194c38038061194c83398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b611860806100ec6000396000f3fe60806040523480156200001157600080fd5b50600436106200006a5760003560e01c80632145c28d146200006f578063715018a614620000a257806376a2bc4f14620000ae5780638da5cb5b14620000c5578063b50cbd9f14620000d7578063f2fde38b14620000eb575b600080fd5b6200008662000080366004620005d8565b62000102565b6040516001600160a01b03909116815260200160405180910390f35b620000ac6200027f565b005b62000086620000bf366004620006bb565b620002ba565b6000546001600160a01b031662000086565b60015462000086906001600160a01b031681565b620000ac620000fc366004620005d8565b62000447565b600080546001600160a01b03163314620001395760405162461bcd60e51b81526004016200013090620007b7565b60405180910390fd5b81604051620001489062000594565b6001600160a01b039091168152602001604051809103906000f08015801562000175573d6000803e3d6000fd5b5060405163f2fde38b60e01b81523360048201529091506001600160a01b0382169063f2fde38b90602401600060405180830381600087803b158015620001bb57600080fd5b505af1158015620001d0573d6000803e3d6000fd5b5050604080516001600160a01b038581168252861660208201523393507f58e449f359f97f61d06a494e63e7e7451ff097e52a2c0f765b351e3bcc0c5f9992500160405180910390a2600154604051632484c0d160e21b81526001600160a01b03838116600483015290911690639213034490602401600060405180830381600087803b1580156200026157600080fd5b505af115801562000276573d6000803e3d6000fd5b50505050919050565b6000546001600160a01b03163314620002ac5760405162461bcd60e51b81526004016200013090620007b7565b620002b86000620004e9565b565b600080600160009054906101000a90046001600160a01b03166001600160a01b0316637e2ec6d06040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000311573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003379190620007ec565b905060006200034d8b8b8b8b8b8b8b8b62000539565b905081816040516200035f90620005a2565b6200036c9291906200085c565b604051809103906000f08015801562000389573d6000803e3d6000fd5b50600154604051631244f04d60e21b81529194506001600160a01b031690634913c13490620003c59086908f908f908f908b906004016200088a565b600060405180830381600087803b158015620003e057600080fd5b505af1158015620003f5573d6000803e3d6000fd5b50506040516001600160a01b038681168252851692507fae2292667db92e6da511010072f5a5e0804f89f8d78418b077abb4893849ff87915060200160405180910390a2505098975050505050505050565b6000546001600160a01b03163314620004745760405162461bcd60e51b81526004016200013090620007b7565b6001600160a01b038116620004db5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000130565b620004e681620004e9565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b606088888888888888886040516024016200055c989796959493929190620008ee565b60408051601f198184030181529190526020810180516001600160e01b031663591e406560e01b179052905098975050505050505050565b610529806200097883390190565b61098a8062000ea183390190565b6001600160a01b0381168114620004e657600080fd5b8035620005d381620005b0565b919050565b600060208284031215620005eb57600080fd5b8135620005f881620005b0565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200062757600080fd5b813567ffffffffffffffff80821115620006455762000645620005ff565b604051601f8301601f19908116603f01168101908282118183101715620006705762000670620005ff565b816040528381528660208588010111156200068a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b80358015158114620005d357600080fd5b600080600080600080600080610100898b031215620006d957600080fd5b883567ffffffffffffffff80821115620006f257600080fd5b620007008c838d0162000615565b995060208b01359150808211156200071757600080fd5b620007258c838d0162000615565b985060408b01359150808211156200073c57600080fd5b6200074a8c838d0162000615565b975060608b01359150808211156200076157600080fd5b50620007708b828c0162000615565b9550506200078160808a01620006aa565b93506200079160a08a01620006aa565b925060c08901359150620007a860e08a01620005c6565b90509295985092959890939650565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215620007ff57600080fd5b8151620005f881620005b0565b6000815180845260005b81811015620008345760208185018101518683018201520162000816565b8181111562000847576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038316815260406020820181905260009062000882908301846200080c565b949350505050565b600060018060a01b03808816835260a06020840152620008ae60a08401886200080c565b8381036040850152620008c281886200080c565b90508381036060850152620008d881876200080c565b9250508084166080840152509695505050505050565b6000610100808352620009048184018c6200080c565b905082810360208401526200091a818b6200080c565b9050828103604084015262000930818a6200080c565b905082810360608401526200094681896200080c565b9615156080840152505092151560a084015260c08301919091526001600160a01b031660e09091015294935050505056fe608060405234801561001057600080fd5b5060405161052938038061052983398101604081905261002f91610151565b61003833610047565b61004181610097565b50610181565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b61020a1760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03163b151590565b60006020828403121561016357600080fd5b81516001600160a01b038116811461017a57600080fd5b9392505050565b610399806101906000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100b3575b600080fd5b61006f61006a3660046102fe565b6100c6565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610139565b6000546001600160a01b031661007e565b61006f6100c13660046102fe565b61016f565b6000546001600160a01b031633146100f95760405162461bcd60e51b81526004016100f09061032e565b60405180910390fd5b61010281610219565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6000546001600160a01b031633146101635760405162461bcd60e51b81526004016100f09061032e565b61016d60006102ae565b565b6000546001600160a01b031633146101995760405162461bcd60e51b81526004016100f09061032e565b6001600160a01b0381166101fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f0565b610207816102ae565b50565b6001600160a01b03163b151590565b6001600160a01b0381163b61028c5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100f0565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561031057600080fd5b81356001600160a01b038116811461032757600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122025788f5ba2bb5e2e112ca7c626320e80ba5637aa5bfd0b5ff7f08e6ae104069164736f6c634300080d0033608060405260405161098a38038061098a8339810160408190526100229161048b565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5161054b565b6000805160206109438339815191521461006957610069610570565b6100758282600061007c565b50506105f0565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610586565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610586565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061094383398151915260001b61031360201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161096360279139610316565b9392505050565b6001600160a01b03163b151590565b90565b60606001600160a01b0384163b61037e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b03168560405161039991906105a1565b600060405180830381855af49150503d80600081146103d4576040519150601f19603f3d011682016040523d82523d6000602084013e6103d9565b606091505b5090925090506103ea8282866103f4565b9695505050505050565b606083156104035750816102fd565b8251156104135782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105bd565b80516001600160a01b038116811461044457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561047a578181015183820152602001610462565b838111156101405750506000910152565b6000806040838503121561049e57600080fd5b6104a78361042d565b60208401519092506001600160401b03808211156104c457600080fd5b818501915085601f8301126104d857600080fd5b8151818111156104ea576104ea610449565b604051601f8201601f19908116603f0116810190838211818310171561051257610512610449565b8160405282815288602084870101111561052b57600080fd5b61053c83602083016020880161045f565b80955050505050509250929050565b60008282101561056b57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561059857600080fd5b6102fd8261042d565b600082516105b381846020870161045f565b9190910192915050565b60208152600082518060208401526105dc81604085016020870161045f565b601f01601f19169190910160400192915050565b610344806105ff6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102e860279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061023f565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b60606001600160a01b0384163b6101915760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516101ac9190610298565b600060405180830381855af49150503d80600081146101e7576040519150601f19603f3d011682016040523d82523d6000602084013e6101ec565b606091505b50915091506101fc828286610206565b9695505050505050565b6060831561021557508161004e565b8251156102255782518084602001fd5b8160405162461bcd60e51b815260040161018891906102b4565b60006020828403121561025157600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b8381101561028357818101518382015260200161026b565b83811115610292576000848401525b50505050565b600082516102aa818460208701610268565b9190910192915050565b60208152600082518060208401526102d3816040850160208701610268565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212204e2fb5a461159fa89d2c2361d65fe4b2a8509cf0eb1b2cca77858c1e2a6c551764736f6c634300080d0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220070b0da5b17be6497cdfb757fbc6dd2452cdd56c4ff7aadd7757c5501a5595f864736f6c634300080d0033';

type SoulBoundNFTFactoryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: SoulBoundNFTFactoryConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class SoulBoundNFTFactory__factory extends ContractFactory {
  constructor(...args: SoulBoundNFTFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'SoulBoundNFTFactory';
  }

  deploy(
    _proxyRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SoulBoundNFTFactory> {
    return super.deploy(_proxyRegistry, overrides || {}) as Promise<SoulBoundNFTFactory>;
  }
  getDeployTransaction(
    _proxyRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_proxyRegistry, overrides || {});
  }
  attach(address: string): SoulBoundNFTFactory {
    return super.attach(address) as SoulBoundNFTFactory;
  }
  connect(signer: Signer): SoulBoundNFTFactory__factory {
    return super.connect(signer) as SoulBoundNFTFactory__factory;
  }
  static readonly contractName: 'SoulBoundNFTFactory';
  public readonly contractName: 'SoulBoundNFTFactory';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SoulBoundNFTFactoryInterface {
    return new utils.Interface(_abi) as SoulBoundNFTFactoryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SoulBoundNFTFactory {
    return new Contract(address, _abi, signerOrProvider) as SoulBoundNFTFactory;
  }
}
